using Microsoft.EntityFrameworkCore.Migrations;

namespace AplicacionPedidos.Migrations
{
    public partial class AgregarColumnasFaltantesPedidos : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            // Agregar columna PrecioUnitario a la tabla OrderItems
            if (!migrationBuilder.CheckColumnExists("OrderItems", "PrecioUnitario"))
            {
                migrationBuilder.AddColumn<decimal>(
                    name: "PrecioUnitario",
                    table: "OrderItems",
                    type: "decimal(18,2)",
                    nullable: false,
                    defaultValue: 0m);
            }

            // Agregar columna DireccionEntrega a la tabla Orders si no existe
            if (!migrationBuilder.CheckColumnExists("Orders", "DireccionEntrega"))
            {
                migrationBuilder.AddColumn<string>(
                    name: "DireccionEntrega",
                    table: "Orders",
                    type: "nvarchar(200)",
                    maxLength: 200,
                    nullable: false,
                    defaultValue: "");
            }

            // Agregar columna Notas a la tabla Orders si no existe
            if (!migrationBuilder.CheckColumnExists("Orders", "Notas"))
            {
                migrationBuilder.AddColumn<string>(
                    name: "Notas",
                    table: "Orders",
                    type: "nvarchar(500)",
                    maxLength: 500,
                    nullable: true);
            }
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            // Eliminar columna PrecioUnitario si existe
            if (migrationBuilder.CheckColumnExists("OrderItems", "PrecioUnitario"))
            {
                migrationBuilder.DropColumn(
                    name: "PrecioUnitario",
                    table: "OrderItems");
            }

            // Eliminar columna DireccionEntrega si existe
            if (migrationBuilder.CheckColumnExists("Orders", "DireccionEntrega"))
            {
                migrationBuilder.DropColumn(
                    name: "DireccionEntrega",
                    table: "Orders");
            }

            // Eliminar columna Notas si existe
            if (migrationBuilder.CheckColumnExists("Orders", "Notas"))
            {
                migrationBuilder.DropColumn(
                    name: "Notas",
                    table: "Orders");
            }
        }
    }

    public static class MigrationBuilderExtensions
    {
        public static bool CheckColumnExists(this MigrationBuilder migrationBuilder, string tableName, string columnName)
        {
            migrationBuilder.Sql($@"
                IF EXISTS (
                    SELECT 1
                    FROM INFORMATION_SCHEMA.COLUMNS
                    WHERE 
                        TABLE_NAME = '{tableName}' AND 
                        COLUMN_NAME = '{columnName}'
                )
                BEGIN
                    PRINT 'Column {columnName} exists in table {tableName}'
                END
                ELSE
                BEGIN
                    PRINT 'Column {columnName} does not exist in table {tableName}'
                END
            ");
            return false; // Esto es solo para compilación, la SQL real maneja la lógica
        }
    }
}