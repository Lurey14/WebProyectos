@model AplicacionPedidos.Models.OrderModel

@{
    ViewData["Title"] = "Crear Pedido";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="fw-bold" style="color: #1C3150;">Crear Nuevo Pedido</h1>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-2"></i>Volver a la Lista
        </a>
    </div>

    <!-- Mostrar errores generales -->
    @if (ViewData.ModelState.IsValid == false)
    {
        <div class="alert alert-danger mb-4">
            <h5><i class="bi bi-exclamation-triangle me-2"></i>Se han encontrado errores:</h5>
            <div asp-validation-summary="All" class="text-danger"></div>
        </div>
    }

    <form asp-action="Create" method="post" id="orderForm">
        <div class="row">
            <!-- Información del pedido -->
            <div class="col-lg-4 mb-4">
                <div class="card border-0 shadow h-100" style="border-radius: 10px;">
                    <div class="card-header py-3" style="background-color: #4D6489; color: white;">
                        <h5 class="mb-0 fw-bold"><i class="bi bi-info-circle me-2"></i>Información del Pedido</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label for="UserId" class="form-label fw-medium">Cliente</label>
                            <select id="UserId" name="UserId" class="form-select" required>
                                <option value="">-- Seleccionar Cliente --</option>
                                @foreach (var cliente in (SelectList)ViewBag.ClienteId)
                                {
                                    <option value="@cliente.Value">@cliente.Text</option>
                                }
                            </select>
                            <span asp-validation-for="UserId" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label for="DireccionEntrega" class="form-label fw-medium">Dirección de Entrega</label>
                            <textarea id="DireccionEntrega" name="DireccionEntrega" class="form-control" rows="3" required placeholder="Ingrese la dirección de entrega"></textarea>
                            <span asp-validation-for="DireccionEntrega" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label for="Notas" class="form-label fw-medium">Notas Adicionales</label>
                            <textarea id="Notas" name="Notas" class="form-control" rows="2" placeholder="Notas opcionales"></textarea>
                            <span asp-validation-for="Notas" class="text-danger"></span>
                        </div>
                        
                        <input type="hidden" id="Estado" name="Estado" value="Pendiente" />
                        <input type="hidden" id="Fecha" name="Fecha" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss")" />
                    </div>
                </div>
            </div>
            
            <!-- Selección de productos -->
            <div class="col-lg-8 mb-4">
                <div class="card border-0 shadow" style="border-radius: 10px;">
                    <div class="card-header py-3 d-flex justify-content-between align-items-center" style="background-color: #4D6489; color: white;">
                        <h5 class="mb-0 fw-bold"><i class="bi bi-cart-plus me-2"></i>Agregar Productos</h5>
                        <button type="button" class="btn btn-sm btn-light" id="addProductRow">
                            <i class="bi bi-plus-circle me-1"></i> Agregar Fila
                        </button>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table" id="productTable">
                                <thead>
                                    <tr>
                                        <th>Producto</th>
                                        <th style="width: 120px;">Precio</th>
                                        <th style="width: 100px;">Cantidad</th>
                                        <th style="width: 120px;">Subtotal</th>
                                        <th style="width: 50px;"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr class="product-row">
                                        <td>
                                            <select name="productoIds" class="form-select producto-select" required>
                                                <option value="">-- Seleccionar Producto --</option>
                                                @foreach (var producto in ViewBag.Productos)
                                                {
                                                    <option value="@producto.Id" data-precio="@producto.Precio" data-stock="@producto.Stock">
                                                        @producto.Nombre (@producto.Stock disponibles)
                                                    </option>
                                                }
                                            </select>
                                        </td>
                                        <td>
                                            <input type="text" class="form-control-plaintext producto-precio" readonly />
                                        </td>
                                        <td>
                                            <input type="number" name="cantidades" class="form-control producto-cantidad" min="1" value="1" required />
                                        </td>
                                        <td>
                                            <input type="text" class="form-control-plaintext producto-subtotal" readonly />
                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-sm btn-outline-danger remove-row">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th colspan="3" class="text-end">Total:</th>
                                        <th><span id="orderTotal">$0.00</span></th>
                                        <th></th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                        
                        <div class="alert alert-info mt-3">
                            <i class="bi bi-info-circle me-2"></i>
                            Seleccione al menos un producto para crear el pedido.
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="mt-4 text-center">
            <a asp-action="Index" class="btn btn-outline-secondary me-2">
                <i class="bi bi-x-circle me-2"></i>Cancelar
            </a>
            <button type="submit" class="btn" id="submitBtn" style="background-color: #1C3150; color: white;">
                <i class="bi bi-check-circle me-2"></i>Crear Pedido
            </button>
        </div>
        
        <!-- Debug Info (visible solo en desarrollo) -->
        <div class="mt-4 p-3 border rounded bg-light" id="debug-info" style="display:none;">
            <h6 class="fw-bold">Información de depuración:</h6>
            <div id="debug-messages"></div>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Función para agregar mensajes de depuración
            function addDebug(message) {
                console.log(message);
                $("#debug-messages").append("<p>" + message + "</p>");
                $("#debug-info").show();
            }
            
            addDebug("Iniciando formulario");
            
            const formatter = new Intl.NumberFormat('es-BO', {
                style: 'currency',
                currency: 'BOB',
                minimumFractionDigits: 2
            });
            
            // Función para calcular subtotal de una fila
            function calcularSubtotal(row) {
                const precio = parseFloat(row.find('.producto-select option:selected').data('precio')) || 0;
                const cantidad = parseInt(row.find('.producto-cantidad').val()) || 0;
                const subtotal = precio * cantidad;
                
                row.find('.producto-precio').val(formatter.format(precio));
                row.find('.producto-subtotal').val(formatter.format(subtotal));
                
                return subtotal;
            }
            
            // Función para calcular el total del pedido
            function calcularTotal() {
                let total = 0;
                $('.product-row').each(function() {
                    total += calcularSubtotal($(this));
                });
                
                $('#orderTotal').text(formatter.format(total));
            }
            
            // Evento al cambiar producto
            $(document).on('change', '.producto-select', function() {
                const row = $(this).closest('.product-row');
                const option = $(this).find('option:selected');
                const precio = option.data('precio') || 0;
                const stock = option.data('stock') || 0;
                
                row.find('.producto-precio').val(formatter.format(precio));
                row.find('.producto-cantidad').attr('max', stock);
                row.find('.producto-cantidad').val(1);
                
                calcularSubtotal(row);
                calcularTotal();
            });
            
            // Evento al cambiar cantidad
            $(document).on('change', '.producto-cantidad', function() {
                const row = $(this).closest('.product-row');
                const stock = parseInt(row.find('.producto-select option:selected').data('stock')) || 0;
                let cantidad = parseInt($(this).val()) || 0;
                
                // Validar que la cantidad no sea mayor al stock
                if (cantidad > stock) {
                    cantidad = stock;
                    $(this).val(stock);
                    alert('La cantidad no puede ser mayor al stock disponible');
                }
                
                if (cantidad < 1) {
                    cantidad = 1;
                    $(this).val(1);
                }
                
                calcularSubtotal(row);
                calcularTotal();
            });
            
            // Agregar fila de producto
            $('#addProductRow').click(function() {
                const newRow = $('.product-row:first').clone();
                newRow.find('.producto-select').val('');
                newRow.find('.producto-cantidad').val(1);
                newRow.find('.producto-precio, .producto-subtotal').val('');
                
                $('#productTable tbody').append(newRow);
            });
            
            // Eliminar fila de producto
            $(document).on('click', '.remove-row', function() {
                if ($('.product-row').length > 1) {
                    $(this).closest('.product-row').remove();
                    calcularTotal();
                } else {
                    alert('Debe haber al menos una fila de producto');
                }
            });
            
            // Validación del formulario antes de enviar
            $('#orderForm').submit(function(e) {
                // Verificar cliente
                const clienteId = $("#UserId").val();
                if (!clienteId) {
                    e.preventDefault();
                    alert("Debe seleccionar un cliente");
                    addDebug("Error: No se seleccionó cliente");
                    return false;
                } else {
                    addDebug("Cliente seleccionado: " + clienteId);
                }
                
                // Verificar dirección
                const direccion = $("#DireccionEntrega").val().trim();
                if (!direccion) {
                    e.preventDefault();
                    alert("Debe ingresar una dirección de entrega");
                    addDebug("Error: Dirección de entrega vacía");
                    return false;
                } else {
                    addDebug("Dirección: " + direccion);
                }
                
                // Verificar productos
                let hayProductos = false;
                $('.producto-select').each(function() {
                    if ($(this).val()) {
                        hayProductos = true;
                        addDebug("Producto: " + $(this).val() + ", Cantidad: " + $(this).closest('tr').find('.producto-cantidad').val());
                    }
                });
                
                if (!hayProductos) {
                    e.preventDefault();
                    alert("Debe seleccionar al menos un producto");
                    addDebug("Error: No hay productos seleccionados");
                    return false;
                }
                
                // Deshabilitar botón para prevenir múltiples envíos
                $("#submitBtn").prop("disabled", true).html('<i class="spinner-border spinner-border-sm me-2"></i>Procesando...');
                addDebug("Formulario enviado correctamente");
                return true;
            });
            
            // Inicializar
            calcularTotal();
            
            // Selección inicial de productos si hay
            if ($('.producto-select').first().val()) {
                $('.producto-select').first().trigger('change');
            }
        });
    </script>
}
