@model AplicacionPedidos.Models.OrderModel

@{
    ViewData["Title"] = "Detalles del Pedido";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="fw-bold" style="color: #1C3150;">Detalles del Pedido #@Model.Id</h1>
        <div>
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left me-2"></i>Volver a la Lista
            </a>
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn ms-2" style="background-color: #4D6489; color: white;">
                <i class="bi bi-pencil me-2"></i>Editar Pedido
            </a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-lg-4 mb-4">
            <div class="card border-0 shadow h-100" style="border-radius: 10px;">
                <div class="card-header py-3" style="background-color: #4D6489; color: white;">
                    <h5 class="mb-0 fw-bold"><i class="bi bi-info-circle me-2"></i>Información del Pedido</h5>
                </div>
                <div class="card-body">
                    <div class="mb-4">
                        <div class="mb-3">
                            <span class="d-block text-muted small">Estado actual</span>
                            <div class="d-flex align-items-center">
                                <span class="badge py-2 px-3 fs-6" style="background-color: @(Model.Estado switch
                                {
                                    "Pendiente" => "#AAA2B1",
                                    "Procesando" => "#4D6489",
                                    "Enviado" => "#78809D",
                                    "Entregado" => "#1C3150",
                                    "Cancelado" => "#DBC6C0",
                                    _ => "#AAA2B1",
                                });">
                                    @Model.Estado
                                </span>
                            </div>
                        </div>

                        @if (User.IsInRole("Admin") || User.IsInRole("Empleado"))
                        {
                            <div class="mb-4">
                                <span class="d-block text-muted small">Cambiar estado</span>
                                <div class="btn-group w-100" role="group">
                                    @foreach (var estado in (List<string>)ViewBag.Estados)
                                    {
                                        if (estado != Model.Estado)
                                        {
                                            <form asp-action="CambiarEstado" asp-route-id="@Model.Id" method="post" style="display: inline;">
                                                <input type="hidden" name="nuevoEstado" value="@estado" />
                                                <button type="submit" class="btn btn-sm btn-outline-secondary me-1 mb-1">
                                                    <i class="bi bi-arrow-right-circle me-1"></i>@estado
                                                </button>
                                            </form>
                                        }
                                    }
                                </div>
                            </div>
                        }

                        <dl class="row mb-0">
                            <dt class="col-sm-5 text-muted">ID del Pedido</dt>
                            <dd class="col-sm-7 fw-bold">#@Model.Id</dd>
                            
                            <dt class="col-sm-5 text-muted">Fecha</dt>
                            <dd class="col-sm-7">@Model.Fecha.ToString("dd/MM/yyyy HH:mm")</dd>
                            
                            <dt class="col-sm-5 text-muted">Total</dt>
                            <dd class="col-sm-7 fw-bold fs-4" style="color: #1C3150;">@Model.Total.ToString("C")</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-4 mb-4">
            <div class="card border-0 shadow h-100" style="border-radius: 10px;">
                <div class="card-header py-3" style="background-color: #4D6489; color: white;">
                    <h5 class="mb-0 fw-bold"><i class="bi bi-person me-2"></i>Información del Cliente</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="avatar-circle me-3" style="background-color: #4D6489; width: 50px; height: 50px; font-size: 1.5rem;">
                            @(Model.Cliente?.Nombre?.Substring(0, 1).ToUpper() ?? "U")
                        </div>
                        <div>
                            <h5 class="fw-bold mb-1">@Model.Cliente?.Nombre</h5>
                            <div class="text-muted">@Model.Cliente?.Email</div>
                        </div>
                    </div>
                    
                    <dl class="row mb-0">
                        <dt class="col-sm-4 text-muted">Rol</dt>
                        <dd class="col-sm-8">
                            <span class="badge bg-secondary">@Model.Cliente?.Rol</span>
                        </dd>
                        
                        <dt class="col-sm-4 text-muted">Dirección</dt>
                        <dd class="col-sm-8">@Model.DireccionEntrega</dd>
                        
                        <dt class="col-sm-4 text-muted">Notas</dt>
                        <dd class="col-sm-8">
                            <p class="mb-0">@(String.IsNullOrEmpty(Model.Notas) ? "Sin notas" : Model.Notas)</p>
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
        
        <div class="col-lg-4 mb-4">
            <div class="card border-0 shadow h-100" style="border-radius: 10px;">
                <div class="card-header py-3" style="background-color: #4D6489; color: white;">
                    <h5 class="mb-0 fw-bold"><i class="bi bi-clock-history me-2"></i>Historial</h5>
                </div>
                <div class="card-body">
                    <div class="timeline">
                        <div class="timeline-item @(Model.Estado == "Pendiente" || Model.Estado == "Procesando" || Model.Estado == "Enviado" || Model.Estado == "Entregado" ? "active" : "")">
                            <div class="timeline-indicator"></div>
                            <p class="mb-1 fw-medium">Pedido recibido</p>
                            <p class="text-muted small">@Model.Fecha.ToString("dd/MM/yyyy HH:mm")</p>
                        </div>
                        <div class="timeline-item @(Model.Estado == "Procesando" || Model.Estado == "Enviado" || Model.Estado == "Entregado" ? "active" : "")">
                            <div class="timeline-indicator"></div>
                            <p class="mb-1 fw-medium">En procesamiento</p>
                            <p class="text-muted small">
                                @(Model.Estado == "Procesando" || Model.Estado == "Enviado" || Model.Estado == "Entregado" ? 
                                    Model.Fecha.AddDays(1).ToString("dd/MM/yyyy") : "Pendiente")
                            </p>
                        </div>
                        <div class="timeline-item @(Model.Estado == "Enviado" || Model.Estado == "Entregado" ? "active" : "")">
                            <div class="timeline-indicator"></div>
                            <p class="mb-1 fw-medium">Enviado</p>
                            <p class="text-muted small">
                                @(Model.Estado == "Enviado" || Model.Estado == "Entregado" ? 
                                    Model.Fecha.AddDays(2).ToString("dd/MM/yyyy") : "Pendiente")
                            </p>
                        </div>
                        <div class="timeline-item @(Model.Estado == "Entregado" ? "active" : "")">
                            <div class="timeline-indicator"></div>
                            <p class="mb-1 fw-medium">Entregado</p>
                            <p class="text-muted small">
                                @(Model.Estado == "Entregado" ? 
                                    Model.Fecha.AddDays(3).ToString("dd/MM/yyyy") : "Pendiente")
                            </p>
                        </div>
                        @if (Model.Estado == "Cancelado")
                        {
                            <div class="timeline-item active">
                                <div class="timeline-indicator" style="background-color: #dc3545;"></div>
                                <p class="mb-1 fw-medium text-danger">Cancelado</p>
                                <p class="text-muted small">@Model.Fecha.AddDays(1).ToString("dd/MM/yyyy")</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card border-0 shadow mb-4" style="border-radius: 10px;">
        <div class="card-header py-3 d-flex justify-content-between align-items-center" style="background-color: #4D6489; color: white;">
            <h5 class="mb-0 fw-bold"><i class="bi bi-box-seam me-2"></i>Productos del Pedido</h5>
            <span class="badge bg-white text-dark">@Model.Items?.Count() productos</span>
        </div>
        <div class="card-body p-0">
            @if (Model.Items != null && Model.Items.Any())
            {
                <div class="list-group list-group-flush product-list">
                    @foreach (var item in Model.Items)
                    {
                        <div class="list-group-item product-item p-3">
                            <div class="row align-items-center">
                                <div class="col-md-2 col-sm-3 mb-3 mb-md-0 text-center">
                                    <div class="product-img-container mx-auto" style="width: 100px; height: 100px; overflow: hidden; border-radius: 8px;">
                                        <img src="@(string.IsNullOrEmpty(item.Producto?.ImagenUrl) ? "/images/products/no-image.jpg" : item.Producto?.ImagenUrl)" 
                                             alt="@item.Producto?.Nombre" class="img-fluid" style="width: 100%; height: 100%; object-fit: cover;">
                                    </div>
                                </div>
                                <div class="col-md-4 col-sm-9 mb-3 mb-md-0">
                                    <h5 class="fw-bold mb-1">@item.Producto?.Nombre</h5>
                                    <div class="mb-2">
                                        <span class="badge" style="background-color: #78809D;">@(item.Producto?.Categoria ?? "Sin categoría")</span>
                                    </div>
                                    <p class="mb-0 text-muted product-description">
                                        @(string.IsNullOrEmpty(item.Producto?.Descripcion) ? "Sin descripción disponible" : 
                                            (item.Producto.Descripcion.Length > 100 ? item.Producto.Descripcion.Substring(0, 100) + "..." : item.Producto.Descripcion))
                                    </p>
                                </div>
                                <div class="col-md-2 col-4 mb-2 mb-md-0 text-center">
                                    <div class="text-muted small">Precio unitario</div>
                                    <div class="fw-bold">@(item.PrecioUnitario > 0 ? item.PrecioUnitario.ToString("C") : item.Producto?.Precio.ToString("C"))</div>
                                </div>
                                <div class="col-md-2 col-4 mb-2 mb-md-0 text-center">
                                    <div class="text-muted small">Cantidad</div>
                                    <div class="quantity-badge">@item.Cantidad</div>
                                </div>
                                <div class="col-md-2 col-4 mb-2 mb-md-0 text-center">
                                    <div class="text-muted small">Subtotal</div>
                                    <div class="fw-bold" style="color: #1C3150;">@item.Subtotal.ToString("C")</div>
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(item.Producto?.Descripcion) && item.Producto.Descripcion.Length > 100)
                            {
                                <div class="mt-2">
                                    <button class="btn btn-sm btn-link p-0 toggle-description" data-bs-toggle="collapse" 
                                            data-bs-target="#description-@item.Id" aria-expanded="false">
                                        Ver descripción completa
                                    </button>
                                    <div class="collapse mt-2" id="description-@item.Id">
                                        <div class="card card-body bg-light p-2">
                                            @item.Producto.Descripcion
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    <div class="list-group-item py-3 bg-light">
                        <div class="row">
                            <div class="col-md-6 offset-md-6">
                                <table class="table table-sm mb-0">
                                    <tr>
                                        <td class="text-end border-0">Subtotal:</td>
                                        <td class="text-end fw-medium border-0" style="width: 150px;">@Model.Total.ToString("C")</td>
                                    </tr>
                                    <tr>
                                        <td class="text-end border-0"><strong>Total del Pedido:</strong></td>
                                        <td class="text-end fw-bold fs-5 border-0" style="color: #1C3150;">@Model.Total.ToString("C")</td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-box2 text-muted" style="font-size: 3rem;"></i>
                    <h5 class="mt-3 mb-1">No hay productos en este pedido</h5>
                    <p class="text-muted">Este pedido no contiene ningún producto</p>
                </div>
            }
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-6 mb-4 mb-md-0">
            <div class="card border-0 shadow h-100" style="border-radius: 10px;">
                <div class="card-header py-3" style="background-color: #4D6489; color: white;">
                    <h5 class="mb-0 fw-bold"><i class="bi bi-truck me-2"></i>Información de Entrega</h5>
                </div>
                <div class="card-body">
                    <h6 class="fw-bold mb-3">Dirección de Entrega</h6>
                    <p>@Model.DireccionEntrega</p>
                    
                    <h6 class="fw-bold mb-3">Instrucciones Especiales</h6>
                    <p>@(String.IsNullOrEmpty(Model.Notas) ? "No se proporcionaron instrucciones especiales" : Model.Notas)</p>
                    
                    <h6 class="fw-bold mb-3">Tiempo Estimado de Entrega</h6>
                    @{
                        var estimatedDelivery = Model.Estado switch
                        {
                            "Pendiente" => "3-5 días hábiles",
                            "Procesando" => "2-4 días hábiles",
                            "Enviado" => "1-2 días hábiles",
                            "Entregado" => "Entregado",
                            "Cancelado" => "Cancelado",
                            _ => "No disponible"
                        };
                    }
                    <p>@estimatedDelivery</p>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card border-0 shadow h-100" style="border-radius: 10px;">
                <div class="card-header py-3" style="background-color: #4D6489; color: white;">
                    <h5 class="mb-0 fw-bold"><i class="bi bi-map me-2"></i>Ubicación de Entrega</h5>
                </div>
                <div class="card-body p-0">
                    <div class="ratio ratio-16x9 bg-light">
                        <div class="d-flex align-items-center justify-content-center flex-column p-3">
                            <i class="bi bi-map text-muted mb-2" style="font-size: 2.5rem;"></i>
                            <h6 class="mb-1">Mapa no disponible</h6>
                            <p class="text-muted small mb-0">La ubicación exacta no está disponible</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="mt-4 d-flex justify-content-between">
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-2"></i>Volver a la Lista
        </a>
        
        <div>
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn me-2" style="background-color: #4D6489; color: white;">
                <i class="bi bi-pencil me-2"></i>Editar Pedido
            </a>
            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-outline-danger">
                <i class="bi bi-trash me-2"></i>Eliminar Pedido
            </a>
        </div>
    </div>
</div>

<style>
    .avatar-circle {
        border-radius: 50%;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
    }
    
    .timeline {
        position: relative;
        padding-left: 30px;
    }
    
    .timeline::before {
        content: '';
        position: absolute;
        left: 10px;
        top: 5px;
        height: calc(100% - 10px);
        width: 2px;
        background-color: #e9ecef;
    }
    
    .timeline-item {
        position: relative;
        padding-bottom: 25px;
        color: #6c757d;
    }
    
    .timeline-item.active {
        color: #212529;
    }
    
    .timeline-indicator {
        position: absolute;
        left: -30px;
        top: 4px;
        height: 16px;
        width: 16px;
        border-radius: 50%;
        background-color: #e9ecef;
        border: 2px solid white;
    }
    
    .timeline-item.active .timeline-indicator {
        background-color: #4D6489;
    }
    
    .product-item {
        transition: all 0.2s ease;
    }
    
    .product-item:hover {
        background-color: #f8f9fa;
    }
    
    .quantity-badge {
        display: inline-block;
        background-color: #4D6489;
        color: white;
        font-weight: bold;
        padding: 5px 10px;
        border-radius: 20px;
        min-width: 30px;
    }
    
    .product-description {
        font-size: 0.9rem;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function(){
            setTimeout(function(){
                $('.alert').alert('close');
            }, 5000);
            
            $('.toggle-description').click(function() {
                const isExpanded = $(this).attr('aria-expanded') === 'true';
                $(this).text(isExpanded ? 'Ver descripción completa' : 'Ocultar descripción');
            });
        });
    </script>
}
